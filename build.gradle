apply plugin: 'application'
apply plugin: 'groovy'
apply from: 'build_upload_task.gradle'

//https://medium.com/@jonashavers/how-to-activate-type-checking-for-all-groovy-classes-57ce785d5028
compileGroovy.groovyOptions.configurationScript = file('gradle/config/groovyc.groovy')

mainClassName = "com.egangotri.upload.archive.UploadToArchive"
version = ""
repositories {
    mavenCentral()
    maven {
        url "http://repo.jenkins-ci.org/releases"
    }
}

compileJava.options.encoding = 'UTF-8'
compileGroovy.options.encoding = 'UTF-8'

sourceSets {
    main {
        groovy {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['resources']
        }
    }

    test {
        groovy {
            srcDirs = ['test']
        }
    }
}


/**
 * To use Aguments
 * With JAR use: java -jar eGangotri-all-1.0.jar  lk jk
 * From Command Line: 'groovy com/egangotri/ upload/gmail/LoginToGmail.groovy lk jk'
 Command Line should also have the vm argumen for the Selenium jar path
 *  With Gradle: gradle loginToGmail is enough
 * //Arguments will be picked from args below
 */


task loginToArchive(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.upload.archive.LoginToArchive"
    jvmArgs = applicationDefaultJvmArgs
    args = ["MMYVV"]
}

task editFilesInArchive(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.upload.archive.EditFilesInArchive"
    jvmArgs = applicationDefaultJvmArgs
    //if last argument is numeric
    // then it will be treated as the number of items you want to edit
    //default is 10
    //if -1 it will open all
    args = ["MMYVV", 16]
}

task fileTransfer(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    println "fileTransfer: ${sourceSets.main.runtimeClasspath}"
    main = "com.egangotri.mover.FileTransfer"
    jvmArgs = applicationDefaultJvmArgs
    args = ["D:\\anaghaPlayGround\\Done"]
}

task zipMover(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    println "zipMover: ${sourceSets.main.runtimeClasspath}"
    main = "com.egangotri.mover.ZipMover"
    jvmArgs = applicationDefaultJvmArgs
    args = ["20 feb 2021.txt"]
}



task bookTitlesInLoop(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.pdf.BookTitlesInLoop"
    //args = [folder, date in DD-MM-YYYY FORMAT OR today , hour only]
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", '25-08-2020', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today-5', '5']
    //args = ["C:\\_catalogWork\\_reducedPdfs\\_ALL_", "dumpFolder=C:\\_catalogWork\\_collation\\local" ]
    args = ["D:\\Treasures62\\_freeze\\kangri , D:\\Treasures62\\_freeze\\panini" ]

}

task bookTitlesInLoopForReduced(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.pdf.BookTitlesInLoop"
    //args = [folder, date in DD-MM-YYYY FORMAT OR today , hour only]
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", '25-08-2020', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today-5', '5']
    args = ["""C:\\_catalogWork\\_reducedPdfs\\Treasures37 (483),

""", "dumpFolder=C:\\_catalogWork\\_collation\\_catReducedLocalPdfExcels" ]
}

task fileMover(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    println "FileMover: ${sourceSets.main.runtimeClasspath}"
    main = "com.egangotri.mover.FileMover"
    jvmArgs = applicationDefaultJvmArgs
    args = [ "SPS", "exclude=Nirnaya Press.pdf", "false"]
   // args = ["PANINI", "KANGRI", "false"]
}

task bookTitles(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.pdf.BookTitles"
    //args = [folder, date in DD-MM-YYYY FORMAT OR today , hour only]
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", '25-08-2020', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today-5', '5']
    args = [
            "paths='C:\\Users\\chetan\\Documents\\eGangotriReceipts'",
            "afterDate=''",
            "afterHour=0",
            "onlyPdfs=true"
    ]

    //args = [ "D:\\Treasures28\\smp , D:\\Treasures28\\JNGM ,D:\\ Treasures28\\bdmm",'today-1', 12]
    //args = ["E:\\eG-tr1-30\\Treasures30"]
}

task allFilePathsLongerThanThreshold(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.pdf.FileNameLongerThanThreshold"
    args = ["C:\\Users\\HP\\eGangotri", 250, 254]
}

task restCalls(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.rest.RestUtil"
    //args = [folder, date in DD-MM-YYYY FORMAT OR today , hour only]
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", '25-08-2020', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today-5', '5']
    //
    args = ["D:\\MASTER_BACKUP\\Treasures52"]
    //  args = [ "D:\\Treasures28\\smp , D:\\Treasures28\\JNGM ,D:\\Treasures28\\bdmm",'today-1', 12]
}

task getFirstNPagesFromPdf(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.pdf.GetFirstNPagesFromPdf"
    //args = [folder, numberOfPages]
    args = ["D:\\Treasures55\\_vinay\\Darab", 5]
}

task tally(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.pdf.Tally"
    args = ["D:\\NMM\\Oct-2019\\07-10-2019",
            "E:\\Oct-2019\\ramtek-9_tally",
            "D:\\NMM\\Oct-2019\\11-10-2019",
            "E:\\Oct-2019\\ramtek-2_tally"]
}

task merge(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.pdf.PDFMerger"
//    //args = [tifFolder, pdfFolder ]
    //args = [pdfRootFolder, 'mega' ]
    args = ["E:\\July-2019\\ramtek-2-"]
}

task repairPDF(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.upload.archive.RunPdfTk"
    args = [""]
    args = [""]
}

task addFooter(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.itext7.AddFooter"
    // args =["C:\\tmp\\experiment"]
}
task chkMissingInArchive(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.upload.archive.CheckForMissingTextsInArchive"
    jvmArgs = applicationDefaultJvmArgs
    args = []
}

task get1stAndLastPages(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.pdf.GetFirstAndLastPages"
    args = [""]
}

task refreshFocusLogFiles(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.egangotri.upload.archive.StartFreshLogFile"
    args = [""]
}

configurations {
    tests
}
// after updating any dependency run
// gradle dependencies --refresh-dependencies
// OR click the GREEN ARROW ICON to the left of dependencies below in IntelliJ
dependencies {
    compile 'org.codehaus.groovy:groovy-all:3.0.10'
    compile 'org.codehaus.gpars:gpars:1.2.1'

    compile 'io.github.http-builder-ng:http-builder-ng-core:1.0.4'
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'
    compile group: 'com.opencsv', name: 'opencsv', version: '5.1'
    compile 'com.itextpdf:itextpdf:5.5.13.1'
    compile 'com.itextpdf:itext7-core:7.2.0'
    compile 'org.apache.poi:poi:4.1.2'
    implementation 'org.apache.poi:poi-ooxml:4.1.2'
    implementation 'com.google.code.gson:gson:2.10.1'

    compile 'commons-io:commons-io:2.6'

    compile group: 'org.codehaus.groovy', name: 'groovy-ant', version: '3.0.3'

    compile 'javax.mail:mail:1.5.0-b01'
    compile group: 'com.sun.mail', name: 'jakarta.mail', version: '1.6.5'

    compile "ch.qos.logback:logback-classic:1.1.3"
    compile "org.slf4j:log4j-over-slf4j:1.7.13"
    runtimeOnly group: 'com.github.f4b6a3', name: 'uuid-creator', version: '5.2.0'

    //The Only reason we are keeping this local
    //which has the META-INF\LICENSE Folder deleted is because during fat-jar
    //task the unzipping has conflicts.
    //For all other purposes best to use, maven repo standalone;commented below
    //compile files('lib/sss.jar')
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-firefox-driver
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.11.0'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '4.11.0'

    testCompile 'org.spockframework:spock-core:2.0-M2-groovy-3.0'
    testCompile 'junit:junit:4.13'
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.apache.org"
    }
}


task fatJarEGangotri(type: Jar) {
    //delete "$buildDir/tmp/expandedArchives"
    baseName = project.name /*+ '-all'*/
    from { (configurations.compile + configurations.runtime).collect { it.isDirectory() ? it : zipTree(it) } }
    println 'creating jar'
    with jar
    manifest {
        attributes 'Implementation-Title': 'eGangotri Programming Tools', 'Implementation-Version': version
        attributes 'Main-Class': mainClassName
    }
}

task fatJar(dependsOn: [fatJarEGangotri]) {
    doLast {
        println 'copying jar file from libs->latestJarForUse'
        copy {
            from "build/libs/"
            into 'latestJarForUse'
            include '*.jar'
        }
    }
}