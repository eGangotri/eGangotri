apply plugin: 'application'
apply plugin: 'groovy'
apply from: 'build_upload_task.gradle'

//https://medium.com/@jonashavers/how-to-activate-type-checking-for-all-groovy-classes-57ce785d5028
compileGroovy.groovyOptions.configurationScript = file('gradle/config/groovyc.groovy')

mainClassName = "com.egangotri.upload.archive.UploadToArchive"
version = ""
repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'
compileGroovy.options.encoding = 'UTF-8'

sourceSets {
    main {
        groovy {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['resources']
        }
    }

    test {
        groovy {
            srcDirs = ['test']
        }
    }
}


/**
 * To use Aguments
 * With JAR use: java -jar eGangotri-all-1.0.jar  lk jk
 * From Command Line: 'groovy com/egangotri/ upload/gmail/LoginToGmail.groovy lk jk'
 Command Line should also have the vm argumen for the Selenium jar path
 *  With Gradle: gradle loginToGmail is enough
 * //Arguments will be picked from args below
 */


task loginToArchive(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.LoginToArchive"
    jvmArgs = applicationDefaultJvmArgs
  //  args = ["email=indiclibrary;range=1-15"]
    args = ["SR-BH"]
}

task editFilesInArchive(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.EditFilesInArchive"
    jvmArgs = applicationDefaultJvmArgs
    //if last argument is numeric
    // then it will be treated as the number of items you want to edit
    //default is 10
    //if -1 it will open all
    args = ["MMYVV", 16]
}

task fileTransfer(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    println "fileTransfer: ${sourceSets.main.runtimeClasspath}"
    mainClass = "com.egangotri.mover.FileTransfer"
    jvmArgs = applicationDefaultJvmArgs
    args = ["D:\\anaghaPlayGround\\Done"]
}

task zipMover(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    println "zipMover: ${sourceSets.main.runtimeClasspath}"
    mainClass = "com.egangotri.mover.ZipMover"
    jvmArgs = applicationDefaultJvmArgs
    args = ["20 feb 2021.txt"]
}

task bookTitlesInLoop(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.pdf.BookTitlesInLoop"
    //args = [folder, date in DD-MM-YYYY FORMAT OR today , hour only]
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", '25-08-2020', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today-5', '5']
    //args = ["C:\\_catalogWork\\_reducedPdfs\\_ALL_", "dumpFolder=C:\\_catalogWork\\_collation\\local" ]
    args = ["E:\\MASTER_BACKUP\\Treasures60\\_freeze\\kangri, E:\\MASTER_BACKUP\\Treasures60\\_freeze\\panini, D:\\MASTER_BACKUP\\Treasures68\\_freeze\\kangri, D:\\MASTER_BACKUP\\Treasures68\\_freeze\\panini" ]
}

task bookTitlesInLoopForReduced(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.pdf.BookTitlesInLoop"
    //args = [folder, date in DD-MM-YYYY FORMAT OR today , hour only]
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", '25-08-2020', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today-5', '5']
    args = ["""C:\\_catalogWork\\_reducedPdfs\\Treasures37 (483),

""", "dumpFolder=C:\\_catalogWork\\_collation\\_catReducedLocalPdfExcels" ]
}

task fileMover(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    println "FileMover: ${sourceSets.main.runtimeClasspath}"
    mainClass = "com.egangotri.mover.FileMover"
    jvmArgs = applicationDefaultJvmArgs
    args = [ "BVT", "exclude=Nirnaya Press.pdf", "false"]
   // args = ["PANINI", "KANGRI", "false"]
}

task bookTitles(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.pdf.BookTitles"
//    args = [
//            "paths='D:\\_Treasures68\\_freeze\\kangri, D:\\_Treasures68\\_freeze\\panini'",
//            "afterDate=''",
//            "afterHour=0",
//            "pdfsOnly=true"
//    ]
    args = ["paths='C:\\Users\\egangotri\\Documents\\test'", 'pdfsOnly=false' ]
    //args = [ "paths=D:\\Treasures28\\smp , D:\\Treasures28\\JNGM ,D:\\ Treasures28\\bdmm",'today-1', 12]
    //args = ["paths=E:\\eG-tr1-30\\Treasures30"]
}

task imgToPdf(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.pdf.ImgToPdf"
//    args = ["D:\\_playground\\_common\\LuckMus-Phase-1\\10 Sep (2) Manuscripts Zip\\unzipped\\Ramayan (965 Pages)\\Ramayan (965 Pages)"]
    args = ["D:\\_playground\\_common\\LuckMus-Phase-1", "JPG"]
    args = ["C:\\Users\\egangotri\\Documents\\test", "ANY"] //last optional
  //  args = ["C:\\Users\\egangotri\\Documents\\test", "TIF"]
//    args = ["C:\\Users\\egangotri\\Documents\\test", "JPG"]
//    args = ["C:\\Users\\egangotri\\Documents\\test", "PNG"]
}

task allFilePathsLongerThanThreshold(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.pdf.FileNameLongerThanThreshold"
    args = ["C:\\Users\\HP\\eGangotri", 250, 254]
}

task restCalls(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.rest.RestUtil"
    //args = [folder, date in DD-MM-YYYY FORMAT OR today , hour only]
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", '25-08-2020', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today', '5']
    //args = [ "D:\\Treasures28\\bala, D:\\Treasures28\\raja", 'today-5', '5']
    //
    args = ["D:\\MASTER_BACKUP\\Treasures52"]
    //  args = [ "D:\\Treasures28\\smp , D:\\Treasures28\\JNGM ,D:\\Treasures28\\bdmm",'today-1', 12]
}

task getFirstNPagesFromPdf(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.pdf.GetFirstAndLastNPagesFromPdf"
    //args = [folder, numberOfPages]
    args = ["C:\\Users\\egangotri\\Documents\\test", 5, 5]
}

task tallyPdf(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.pdf.Tally"
    args = ["D:\\NMM\\Oct-2019\\07-10-2019",
            "E:\\Oct-2019\\ramtek-9_tally",
            "D:\\NMM\\Oct-2019\\11-10-2019",
            "E:\\Oct-2019\\ramtek-2_tally"]
}

//merges small pdfs to large pdf
task mergePdf(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.pdf.EGangotriPDFMerger"
//    //args = [tifFolder, pdfFolder ]
    //args = [pdfRootFolder, 'mega' ]
    args = ["D:\\_playground\\_common\\LuckMus-Phase-1\\10 Sep (2) Manuscripts Zip\\unzipped\\Ramayan (965 Pages)\\Ramayan (965 Pages)"]
}

task repairPDF(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.RunPdfTk"
    args = [""]
    args = [""]
}

task addFooter(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.itext7.AddFooter"
    // args =["C:\\tmp\\experiment"]
}
task chkMissingInArchive(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.CheckForMissingTextsInArchive"
    jvmArgs = applicationDefaultJvmArgs
    args = []
}

task refreshFocusLogFiles(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.StartFreshLogFile"
    args = [""]
}

configurations {
    tests
}
// after updating any dependency run
// gradle dependencies --
// refresh-dependencies
// OR click the GREEN ARROW ICON to the left of dependencies below in IntelliJ
dependencies {
    implementation 'org.apache.groovy:groovy:5.0.0-alpha-9'
    implementation 'com.google.code.gson:gson:2.10'
    // Check for the latest version

    implementation 'org.codehaus.gpars:gpars:1.2.1'
    implementation 'io.github.http-builder-ng:http-builder-ng-core:1.0.4'
    implementation 'org.apache.groovy:groovy-ant:5.0.0-alpha-9'
    implementation 'org.apache.commons:commons-collections4:4.5.0-M1'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.14' // Check for the latest version

    implementation 'org.quartz-scheduler:quartz:2.5.0-rc1'
    implementation 'com.opencsv:opencsv:5.1'
    implementation 'com.itextpdf:itext-core:8.0.5'
    implementation 'com.itextpdf:layout:8.0.5'


    implementation 'org.apache.poi:poi:5.3.0'
    implementation 'org.apache.poi:poi-ooxml:5.3.0'
    implementation 'com.google.code.gson:gson:2.10'

    implementation 'commons-io:commons-io:2.16.1'
    implementation 'org.apache.groovy:groovy-json:5.0.0-alpha-9'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'

    implementation 'javax.mail:mail:1.5.0-b01'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'

    implementation 'ch.qos.logback:logback-classic:1.5.6'

    implementation 'org.slf4j:log4j-over-slf4j:2.0.13'
    runtimeOnly 'com.github.f4b6a3:uuid-creator:6.0.0'

    //The Only reason we are keeping this local
    //which has the META-INF\LICENSE Folder deleted is because during fat-jarFF
    //task the unzipping has conflicts.
    //For all other purposes best to use, maven repo standalone;commented below
    //compile files('lib/sss.jar')
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-firefox-driver
//    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.11.0'
    //  compile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '4.11.0'

    implementation 'org.seleniumhq.selenium:selenium-java:4.22.0'
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.22.0'

    implementation 'org.seleniumhq.selenium:selenium-devtools-v124:4.22.0'

    implementation 'org.apache.poi:poi:5.3.0'
    implementation 'org.apache.poi:poi-ooxml:5.2.5'
    testImplementation 'junit:junit:4.13.1'
}

repositories {
    mavenCentral()
}


task fatJarEGangotri(type: Jar) {
    //delete "$buildDir/tmp/expandedArchives"
    String baseName = project.name /*+ '-all'*/
    from { (configurations.compile + configurations.runtime).collect { it.isDirectory() ? it : zipTree(it) } }
    println 'creating jar'
    with jar
    manifest {
        attributes 'Implementation-Title': 'eGangotri Programming Tools', 'Implementation-Version': version
        attributes 'Main-Class': mainClassName
    }
}

task fatJar(dependsOn: [fatJarEGangotri]) {
    doLast {
        println 'copying jar file from libs->latestJarForUse'
        copy {
            from "build/libs/"
            into 'latestJarForUse'
            include '*.jar'
        }
    }
}