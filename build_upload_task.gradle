import groovy.json.JsonOutput

//Download from https://chromedriver.chromium.org/downloads
//applicationDefaultJvmArgs = ["-Dwebdriver.chrome.driver=${System.getProperty('user.home')}${File.separator}eGangotri${File.separator}chromedriver${File.separator}chromedriver.exe"]
applicationDefaultJvmArgs = ["-Dwebdriver.chrome.driver=resources${File.separator}chromedriver.exe"]

task startMongoServer(type: Exec) {
    doFirst {
        println "startMongoServer"
        workingDir = file('bat_files/startMongoApiServer.bat')
        commandLine = ['cmd', '/C', 'start', 'startMongoApiServer.bat']
        // cmd /C start D:/Projects/WorkSpaces/WorldCleaner/devserver/start.bat
    }
}
ArrayList<String> uploadToArchiveArgs = [ "SPS"]
//ArrayList<String> uploadToArchiveArgs = [ "TMP", "subjectDesc=Panini, Patanjali, Skt Vyakarana"]
//ArrayList<String> uploadToArchiveArgs = [ "MUTHU", "subjectDesc=Pondicherry-MUTHU-2024, Pondicherry-MUTHU"]
//V_ANON, KANGRI, "KM"
//,"KRI_UR_DHARMA", "KRI_UR"  "SR_VIMAL", "EGB_ASI" ,"EG_URDU
// "JNGM_MANU","SALIM","MB", "SV_SHASTRI", "KANGRI", "MUTHU"
// "JNGM" ,  "JNGM_TEL", "JNGM_K", "JNGM_M", "JNGM_BEN", "EGM"*/]
def FOLDER_TO_GENERATE_SNAP2HTML_OF = "D:\\_Treasures69"
task uploadToArchive(dependsOn: [/*'snap2htmlCronJob',*/ 'refreshFocusLogFiles'], type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.UploadToArchive"
    jvmArgs = applicationDefaultJvmArgs
    /** For Single Profile args = ["PRFL1"] For Multiple Profiles args The Following are the files that will be uploaded= ["PRFL1","PRFL2"]  */
    // "KRI_UR_DHARMA", "KRI_UR","VN1", "VN2", "JNGM"
    args = [*uploadToArchiveArgs]
}

//works
task uploadToArchiveSelective(dependsOn: [/*'snap2htmlCronJob',*/ 'refreshFocusLogFiles'], type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.uploaders.UploadToArchiveSelective"
    jvmArgs = applicationDefaultJvmArgs
    // Format:
    //args = ["PROFILE_NAME", "COMMA Separated Abs Paths", "Optional UPLOAD_CYCLE_ID"]
   // args = ["FIP", "D:\\FIP\\IFP Quote Index (set of cards)\\Quote_Index - FIP EFEO Pondicherry2.pdf , D:\\FIP\\IFP Quote Index (set of cards)\\Quote_Index - FIP EFEO Pondicherry.pdf"]
    args = ['FIP', 'C:\\Users\\drnar\\Downloads\\reupload-missed-in-upload-cycle-id-7a3b5b09-f633-4121-b361-8e42bc7799b4-1-of-501-09-May-2024-05-51.xlsx', '7a3b5b09-f633-4121-b361-8e42bc7799b4']
}



task uploadToArchiveExcelV1(dependsOn: [/*'snap2htmlCronJob',*/ 'refreshFocusLogFiles'], type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.uploaders.UploadToArchiveViaExcelV1WithFourCols"
    jvmArgs = applicationDefaultJvmArgs
    //range 4th arg is optional
    // Check if command-line arguments are passed and use them; otherwise, use default values
    // Default arguments
    args = ['SR', 'D:\\excelV1Metadata-Aug.xlsx']

   // args = ['SRI_VATSA2', 'C:\\Users\\drnar\\Downloads\\-uplodable-v3--absPaths-as-excel-SRI_VATSA2-305-08-Jun-2024-22-49.xlsx', '7a3b5b09-f633-4121-b361-8e42bc7799b4']
}

task uploadToArchiveViaExcelV1WithFourCols(dependsOn: [/*'snap2htmlCronJob',*/ 'refreshFocusLogFiles'], type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.uploaders.UploadToArchiveViaExcelV1WithFourCols"
    jvmArgs = applicationDefaultJvmArgs
    /** For Single Profile args = ["PRFL1"] For Multiple Profiles args The Following are the files that will be uploaded= ["PRFL1","PRFL2"]  */
    // "KRI_UR_DHARMA", "KRI_UR","VN1", "VN2", "JNGM"
  //  args=['{"profile":"FIP","excelPath":"reupload-missed-in-upload-cycle-id-fc1326f0-94c6-4470-b826-cad170525672-184-of-475-11-May-2024-13-12.xlsx","uploadCycleId":"fc1326f0-94c6-4470-b826-cad170525672"}']
  //gradle uploadToArchiveExcel -PjsonArgs="{'profile': '','excelPath':'','uploadCycleId': '2-4'}"
    args = [project.hasProperty('jsonArgs') ? project.getProperty('jsonArgs') : '{"profile":"SR-BH","excelPath":"excelV1Metadata-Aug.xlsx"}']
}

task uploadToArchiveViaExcelV2WithFiveCols(dependsOn: [/*'snap2htmlCronJob',*/ 'refreshFocusLogFiles'], type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.uploaders.UploadToArchiveViaExcelV2WithFiveCols"
    jvmArgs = applicationDefaultJvmArgs
    /** For Single Profile args = ["PRFL1"] For Multiple Profiles args The Following are the files that will be uploaded= ["PRFL1","PRFL2"]  */
    // "KRI_UR_DHARMA", "KRI_UR","VN1", "VN2", "JNGM"
    args = ["C:\\Users\\chetan\\Downloads\\egangotri_upload_db.Items_Ushered.xlsx"]
}

task uploadToArchiveViaExcelV3WithOneCol(dependsOn: [/*'snap2htmlCronJob',*/ 'refreshFocusLogFiles'], type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.uploaders.UploadToArchiveViaExcelV3WithOneCol"
    jvmArgs = applicationDefaultJvmArgs
    //range 4th arg is optional
    // Check if command-line arguments are passed and use them; otherwise, use default values
    // Default arguments
    args = ['SRI_VATSA2', 'C:\\Users\\drnar\\Downloads\\-uplodable-v3--absPaths-as-excel-SRI_VATSA2-305-08-Jun-2024-22-49.xlsx', '7a3b5b09-f633-4121-b361-8e42bc7799b4']
}

task uploadToArchiveViaExcelV3WithOneColMulti(dependsOn: [/*'snap2htmlCronJob',*/ 'refreshFocusLogFiles'], type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.uploaders.UploadToArchiveViaExcelV3WithOneColMulti"
    jvmArgs = applicationDefaultJvmArgs
    //range 4th arg is optional
    // Check if command-line arguments are passed and use them; otherwise, use default values
    // Default arguments
    args = ['SRI_VATSA2, SRI_VATSA3', 'C:\\x.xlsx, C:\\y.xlsx']
}

task uploadToArchiveJson(dependsOn: [/*'snap2htmlCronJob',*/ 'refreshFocusLogFiles'], type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.uploaders.UploadToArchiveViaJson"
    jvmArgs = applicationDefaultJvmArgs
    /** For Single Profile args = ["PRFL1"] For Multiple Profiles args The Following are the files that will be uploaded= ["PRFL1","PRFL2"]  */
    // "KRI_UR_DHARMA", "KRI_UR","VN1", "VN2", "JNGM"
    args = ["C:\\Users\\chetan\\Downloads\\egangotri_upload_db.Items_Ushered2.json"]
}


task validateLinksAndReUploadBroken(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.ValidateUploadsAndReUploadFailedItems"
    jvmArgs = applicationDefaultJvmArgs
    //by default last upload is picked. if you want to pick something previous, then specify
    // files below queued and usered order
    //args = ["queued_items_28-Apr-2023_6-27-AM", "ushered_items_28-Apr-2023_6-27-AM" ]
    args = []
}

task copyPostValidationFoldersToQueueAndUsheredFoldersAndStartReuploadProcess(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.CopyPostValidationFoldersToQueuedAndUsheredFolders"
    jvmArgs = applicationDefaultJvmArgs
    args = []
}

task preUploadReview(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.PreUploadReview"
    jvmArgs = applicationDefaultJvmArgs
    args = ["PRFL1", "PRFL2", "PRFL3", "PRFL4", "PRFL5"]
}

task reuploadUsingLinks(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.upload.archive.ReuploadUsingLinks"
    jvmArgs = applicationDefaultJvmArgs
    args = []
}
/*
   https://www.windowscentral.com/how-create-and-run-batch-file-windows-10
 View: Running batch files on startup
 Windows-R shell:script. paste shortcutt your batch will ensure code will run after every restart
*/
task cronJob(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.scheduler.RemoteJobScheduler"
    jvmArgs = applicationDefaultJvmArgs
    args = []
}

task snap2htmlCronJob(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.egangotri.batch.SnapToHtml"
    jvmArgs = applicationDefaultJvmArgs
    args = [FOLDER_TO_GENERATE_SNAP2HTML_OF]
}